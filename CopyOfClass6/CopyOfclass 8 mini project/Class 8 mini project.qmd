---
Name: "Jonathan Cifuentes (A17238145)"
title: "Class 8 mini project"
format: html
---

# Breast Cancer Project

Today we are going to explore some data from the university of Wisconsin Cancer center on breast biopsy data

# Save your input data file into your Project directory

```{r}
wisc.data <- read.csv("WisconsinCancer.csv", row.names=1)
head(wisc.data)
```

> Q. How many patient samples are in this dataset

```{r}
nrow(wisc.data)

```

There are `r nrow(wisc.data)` patients in this dataset

> Q. How many cancer (M) and non cancer (B) samples are there?

```{r}
table(wisc.data$diagnosis)
```

There are `r table(wisc.data$diagnosis)`

save diagnosis for later use as a reference to compare how well we do with PCA etc.

```{r}
diagnosis <- as.factor(wisc.data$diagnosis)
#diagnosis
```

Now exclude the diagnosis column form the data
```{r}
wo.diagnosis <- wisc.data[,-1]
#wo.diagnosis
```

> Q. Hpw many "dimensions", "variables", "columns" are there in this dataset?

```{r}
ncol(wo.diagnosis)
```

There are `r ncol(wo.diagnosis)`

#Principal Component Analysis (PCA)

To perform PCA in R we can use the `prcomp()` function. is takes as input a numeric dataset and optional scale =FALSE/TRUE argument.

we generally always want to set `scale=true` but let's make sure by checking if the mean and standarad deviation values are different across these 30 columns

```{r}
round(colMeans(wo.diagnosis))

```

```{r}
pca <- prcomp(wo.diagnosis, scale=TRUE)
summary(pca)
```
```{r}
attributes(pca)
```


```{r}
plot(pca$x[,1], pca$x[,2], col=diagnosis)
```

```{r}
library(ggplot2)
 x <-  as.data.frame(pca$x)
 
 ggplot(x)+ aes(PC1, PC2, col=diagnosis) + geom_point()
```

> Q. How much variance is captured in the top 3 PCs.

They capture 76% of the total variance

> Q9. For the first principal component, what is the component of the loading (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean? This tells us how much this original feature contributes to the first PC.

```{r}
pca$rotation["concave.points_mean",1]
```

# Combine PCA Results with clustering.

We can use our new PCA variables (i.e.the scores along the PCA contained in t `pca$x`) as input for other methods such as clustering

```{r}
d <- dist(pca$x[,1:3]) 
hc<- hclust(d, method="ward.D2")
plot(hc)
```

To get our cluster membership vector we can use the `cutree()` function and specify a height(`h`) or number of groups (`k`)

```{r}
grps <- cutree(hc, k=2)
table(grps)
```

I want to find out how many diagnoses "M" and "B" are in each grp?

```{r}

table(diagnosis, grps)
```

 We can also plot our results using our clustering vector `grps`
```{r}
plot(pca$x[,1], pca$x[,2], col=grps)
```
 
```{r}
 library(ggplot2)
 x <-  as.data.frame(pca$x)
ggplot(x)+ aes(PC1, PC2, col=grps) + geom_point()
```
 
 >Q15. What is the specificity and sensitivity of our current results?

```{r}
# To test for sick patients we'd use the group most sick patients with equation TP/(TP+FN)
179/(179+24)
#To test for healthy patients we'd use the group most sick patients with equation  TN/(TN+FN
333/(33+333)
```

# Prediction

```{r}
#url <- "new_samples.csv"
url <- "https://tinyurl.com/new-samples-CSV"
new <- read.csv(url)
npc <- predict(pca, newdata=new)
npc
```

```{r}
plot(pca$x[,1:2], col=grps)
points(npc[,1], npc[,2], col="blue", pch=16, cex=3)
text(npc[,1], npc[,2], c(1,2), col="white")
```

> Q16. Which of these new patients should we prioritize for follow up based on your results?

Patient 2 because this group had a higher proportion of malignant cases. It is likely that patients in this profile will exhibit malignancy at some point.